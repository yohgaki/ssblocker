<?php
/********************************************* sample cfg **************************************************/
// SSBlocker loads config file named <ssblocker-script-name>.cfg
// <ssblocker-script-name>.cfg should be in /etc/ssblocker/, /etc/, /usr/local/etc or .
// You can make symlink to "ssblocker", for example ln -s /usr/bin/ssblocker /some/path/to/ssblocker-example,
// then it reads ssblocker-example.cfg

const RULES = [
    // ==RULE FORMAT==
    //'#PCRE ban regex pattern that has IP address ([0-9.]{7,12}) match#'
    //  => [<last seen attacks within threshold time>, <how long block it. O for forever>, <attack detection time>]

    '#qmail-smtpd: reject \(auth not available .* from (\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}) to#'
       => [0, 300], // Allow no previous attack within DETECT(default), block for 300 sec (or more)

    '#qlogenvelope: result=rejected code=554 reason=pregreet .* remoteip=(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}) remoteport=#'
       => [1, 300, 14400], // Allow one attack within 14400 sec, block for 300 sec (or more) for 2nd attack

    '#qlogenvelope: result=rejected code=535 reason=authfailed .* remoteip=(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}) remoteport=#'
       => [2, 180, 86400], // Allow 2 attacks within 86400 sec, block for 180 sec (or more) for 3rd attack

    '#qlogenvelope: result=rejected code=451 reason=alarmtimeout .* remoteip=(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}) remoteport=#'
       => [0, 0],  // Allow no previous attacks, block forever.

    '#GREETDELAY from (\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}): client sent data before greeting#',
       => [-1, -1], // Report only (Do not execute CMD_BLOCK/UNBLOCK)

    // NOTE: block time is multiped by "BLOCK_BASE ** <number_of_block_count>". Block time increases exponentially
];
/***************
// Rule can be PHP functions. For example,

// This rule could be function as follows
const RULES = [
   '#qlogenvelope: result=rejected code=554 reason=pregreet .* remoteip=(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}) remoteport=#'
      => [1, 300, 14400],
];
// Custom matching rule simply does the same check as normal PCRE match rule
$myrule = function($rule, $line) {
   // $rule - RULES array key
   // $line - Current log line
   $regex = '#qlogenvelope: result=rejected code=554 reason=pregreet .* remoteip=(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}) remoteport=#';
   if (!preg_match($regex, $line, $match)) {
      return null;
   }
   $ip = $match[1] ?? null;
   return $ip;
};
const RULES = [
   [0, 300, 14400, $myrule],
];
/***************

const WHITE_LIST_IP   = ['10.0.254.1']; // Set white list IPs. NO CIDR support
const WHITE_LIST_DOM  = '#.*\.(google.com|ohgaki.net)\z#'; // Domain regex
const DETECT          = 7200;  // Threshold time. How long keep last seen attack in $ip_attacked[] (Default)
const STATUS_DUMP     = 100;   // Dump internal status for every 100 block
const LOG_TIMESTAMP   = true;  // Print timestamp in log or not
const TEST_MODE       = false; // Test mode does not execute block/unblock command
const DEBUG_MODE      = false; // Output block/unblock commands. If int is used, dump status for every <num> attacks
const TRACK_UNMANAGED = true;  // Keep track unmanaged block or not

// Change these commands for firewalld, nftalbes, etc
const CMD_INIT      = 'iptables -N ssblocker_example > /dev/null 2>&1; iptables -D INPUT -j ssblocker_example > /dev/null 2>&1; iptables -I INPUT -j ssblocker_example'; // This can be empty if you do this manually
const CMD_BLOCK     = 'iptables -I ssblocker_example -s %s -j DROP';
const CMD_UNBLOCK   = 'iptables -D ssblocker_example -s %s -j DROP';
const CMD_REPORT    = ''; // Set empty string to disable

/***************
// CMD* can be PHP functions to be called by SSBlocker. For example,

const CMD_INIT = function($ip = NULL, $rule = NULL) {
   // No $ip nore $rule for initialization
   // Any init code
}
const CMD_BLOCK = function($ip, $rule) {
   // Your regex $rule is passed, so you can get your block rule as follows
   $cfg = RULES[$rule];
   $ret = file_get_contents('http://your-reverse-proxy-actually-block-ips:8888/block_ip.php?ip=IP& anything you would like to pass');
   // Process $ret value as you like
};
const CMD_UNBLOCK = function($ip, $rule = NULL) {
   // No $rule for unblocking
   $ret = file_get_contents('http://your-reverse-proxy-actually-block-ips:8888/unblock_ip.php?ip=IP& anything you would like to pass');
   // Process $ret value as you like
};

// You probably want to report attacks to central firewall/reverse proxy. CMD_REPORT can be used for this purpose. If you have
// firewall/reverse proxy, it is better just reporting attacks to it and let them block/unblock attacker.

const CMD_REPORT = function($ip, $rule) {
   // Your regex $rule is passed, if you would like to do something with it.
   $ret = file_get_contents('http://your-reverse-proxy-actually-block-ips:8888/unblock_ip.php?ip=IP& anything you would like to pass');
   // Process $ret value as you like
};

/***************
// List blocked: iptables -L ssblocker_example OR iptables -L -n ssblocker_example
// Flush blocking: iptable -F ssblocker_example

const CMD_WAIT_SEC  = 5; // Wait sec for block command execution. (Let attacker close network cleanly if they can) Use 0 for apache/nginx/etc

const BLOCK_CNT_DEC = 36000; // Blocked counter decrement interval sec. Must be reasonably large value
const BLOCK_CNT_MIN = 2; // Min value for block counter decrement. Should be 0 or grater
                         // Frequent attackers would have <Initial Block Time> ** (BLOCK_BASE * BLOCK_CNT_MIN) block time at least
const BLOCK_BASE    = 2; // Block time multipiler. Should be 1 or grater. Block Time = <Initial Block Time> * (BLOCK_BASE ** <Block Count>)

/*** Firewalld ********************************************************************************************
const CMD_INIT      = '';
const CMD_BLOCK     = 'firewall-cmd --add-rich-rule="rule family=\'ipv4\' source address=\'%s\' reject"; firewall-cmd --reload';
const CMD_UNBLOCK   = 'firewall-cmd --remove-rich-rule="rule family=\'ipv4\' source address=\'%s\' reject"; firewall-cmd --reload';
// List fw rule: firewall-cmd --list-all
***********************************************************************************************************/

/*** nftables ********************************************************************************************
const CMD_INIT      = 'nft add table inet ssblocker; nft add chain inet ssblocker input { type filter hook input priority 0 \\; policy accept \\; }';
const CMD_BLOCK     = 'nft add rule inet ssblocker input "ip" saddr %s drop';
const CMD_UNBLOCK   = 'nft delete rule inet ssblocker input handle $(nft list table inet ssblocker -a -n | egrep %s | awk -F\' \' \'{print $NF}\')';
// List blocked: nft list table inet ssblocker -a -n
// Flush blocking: nft flush table inet ssblocker
***********************************************************************************************************/